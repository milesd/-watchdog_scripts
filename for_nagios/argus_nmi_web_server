#!/bin/sh
#/etc/init.d/argus_nmi_web_server: Start/stop the tiny web server which listens for requests to reboot (NMI) the active argus head.
#
# 1.05 psc Fri Dec 11 17:47:00 GMT 2015 - Tidy-up and typo fixes.
# 1.04 psc Fri Dec 11 17:15:00 GMT 2015 - More like other init.d scripts and sets the path
#	so environment same when booting as for manual start/stop.
# 1.03 psc Thu Dec 10 13:45:00 GMT 2015 - Also checks only .pl status
# 1.02 psc Wed Dec 09 14:17:00 GMT 2015 - Now kill checks for .pl extension
# 1.01 psc Wed Dec 09 12:24:00 GMT 2015 - Append to log file in redirect.
# 1.00 arb Fri Dec  4 15:55:23 GMT 2015

### BEGIN INIT INFO
# Provides:          argus_nmi_web_server
# Short-Description: Start web server for Argus NMI intervention
# Required-Start:    $all
# Required-Stop:     $all
# Should-Start:
# Should-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
### END INIT INFO

# Make sure path is sane even for daemon operation
PATH=/bin:/usr/bin:/sbin:/usr/sbin

# Define our process and its name
PROG=/opr/argus_web_server.pl
NAME="Argus NMI web server"

# Check it is installed in the first place
test -x $PROG || exit 0

# Get lsb functions
. /lib/lsb/init-functions

# Crude check for our program running already
prog_is_running()
{
	proglist=`pgrep -f $PROG`
	if [ -z "$proglist" ] ; then
		return 0
	fi
	return 1
}

# Act on common line to start/stop/etc.
case $1 in
	start)
	  prog_is_running
	  if [ $? -eq 0 ] ; then
		log_begin_msg "Starting $NAME daemon..."
		su opr -c "$PROG" >> /opr/argus_web_server.log 2>&1 &
		log_end_msg $?
	  else
		echo "$NAME already running"
	  fi
	;;

	stop)
	  prog_is_running
	  if [ $? -ne 0 ] ; then
		log_begin_msg "Stopping $NAME daemon..."
		kill `pgrep -f $PROG`
		log_end_msg $?
	  else
		echo "$NAME already stopped"
	  fi
	;;

	status)
	  status_of_proc "$PROG" "$NAME"
	;;

	*)
	  echo $0 'start|stop|status'
	  exit 1
	;;
esac

exit 0
